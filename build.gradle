subprojects {
    version = "1.0" //Make warning shut up
}

//TODO: Have a cross MC version code folder?

evaluationDependsOnChildren() // gotta make sure the children happen first

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'

version = "1.0.0"
allprojects {
    group = "net.minecraftforge"
    archivesBaseName = "Mercurius"
    apply plugin: 'maven'
}

repositories {
	mavenCentral()
}
    
dependencies {
	compile 'com.google.guava:guava:17.0' //Not sure how far back this goes.. need to check each dep for each mc version...
    compile 'com.google.code.gson:gson:2.2.4'
    compile 'org.apache.logging.log4j:log4j-api:2.0-beta9'
}

// easy setups
task setupDecompWorkspace
task setupDevWorkspace
task setupCiWorkspace

// configure subprojects
subprojects {
    version = minecraft.version // + "-" + rootProject.version //Do we want to apply the version to the file name? 
                                //Doing it this way allows us to simply reference a single version per mc version 
                                //in the mc version json and the launcher will auto update it.
    
    dependencies {
        compile rootProject
    }
    sourceSets.main.resources.srcDirs += rootProject.sourceSets.main.resources.srcDirs

    jar {
        duplicatesStrategy = 'exclude'
        from rootProject.sourceSets.main.output
    }

    // Commented this out until Lex finds a fix(???)
    /*sourceJar {
        duplicatesStrategy = 'exclude'
        from rootProject.sourceSets.main.allSource
    }
    
    artifacts {
        archives sourceJar
    }*/
    
    processResources
    {
        inputs.property "version", project.version
        inputs.property "mcversion", project.minecraft.version

        from(sourceSets.main.resources.srcDirs) {
            include 'mcmod.info'
            expand 'version':project.version, 'mcversion':project.minecraft.version
        }

        from(sourceSets.main.resources.srcDirs) {
            exclude 'mcmod.info'
        }
    }
    
    uploadArchives {
        repositories.mavenDeployer {

            dependsOn 'build'

            if (project.hasProperty('forgeMavenPass'))
            {
                repository(url: "http://files.minecraftforge.net/maven/manage/upload") {
                    authentication(userName: "forge", password: project.getProperty('forgeMavenPass'))
                }
            }
            else
            {
                repository(url: 'file://localhost/' + rootProject.file('repo').getAbsolutePath())
            }

            pom {
                groupId = project.group
                version = project.version
                artifactId = project.archivesBaseName
                project {
                    name project.archivesBaseName
                    packaging 'jar'
                    description 'Mercurius Statistics Gathering Mod'
                    url 'https://github.com/MinecraftForge/Mercurius'

                    scm {
                        url 'https://github.com/MinecraftForge/Mercurius'
                        connection 'scm:git:git://github.com/MinecraftForge/Mercurius.git'
                        developerConnection 'scm:git:git@github.com:MinecraftForge/Mercurius.git'
                    }

                    issueManagement {
                        system 'github'
                        url 'https://github.com/MinecraftForge/Mercurius/issues'
                    }

                    licenses {
                        license {
                            name 'LGPL v2.1'
                            url 'https://github.com/MinecraftForge/Mercurius/blob/master/LICENSE.md'
                            distribution 'repo'
                        }
                    }

                    developers {
                        developer {
                            id 'LexManos'
                            name 'Lex Manos'
                            roles { role 'developer' }
                        }
                        developer {
                            id 'TamasHenning'
                            name 'Tamas Henning'
                            roles { role 'developer' }
                        }
                    }
                }
            }
        }
    }

    // task deps
    rootProject.setupDecompWorkspace.dependsOn setupDecompWorkspace
    rootProject.setupDevWorkspace.dependsOn setupDevWorkspace
    rootProject.setupCiWorkspace.dependsOn setupCiWorkspace
    rootProject.build.dependsOn build
    rootProject.uploadArchives.dependsOn uploadArchives
}
